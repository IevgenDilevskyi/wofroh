DROP TABLE IF EXISTS user CASCADE;
DROP TABLE IF EXISTS workout_exercise CASCADE;
DROP TABLE IF EXISTS exercise CASCADE;
DROP TABLE IF EXISTS workout CASCADE;
DROP TABLE IF EXISTS user_workout CASCADE;
DROP TABLE IF EXISTS muscle_group CASCADE;
DROP TABLE IF EXISTS user_rating/comment CASCADE;
DROP TABLE IF EXISTS messaging CASCADE;
DROP TABLE IF EXISTS friends CASCADE;


CREATE TABLE user (
  id SERIAL PRIMARY KEY NOT NULL,
  name VARCHAR(255) NOT NULL,
  email VARCHAR(255) NOT NULL,
  password VARCHAR(255) NOT NULL,
  username VARCHAR(255) NOT NULL,
  sign_up_date DATE NOT NULL DEFAULT CURRENT_DATE,
  last_workout_date DATE NOT NULL DEFAULT CURRENT_DATE,
  location VARCHAR(255) NOT NULL
);

CREATE TABLE friends (
  id SERIAL PRIMARY KEY NOT NULL,
  friend_1_id INTEGER REFERENCES user(id) ON DELETE CASCADE,
  friend_2_id INTEGER REFERENCES user(id) ON DELETE CASCADE
)

CREATE TABLE workout_exercise (
  id SERIAL PRIMARY KEY NOT NULL,
  excercise_id INTEGER REFERENCES excercise(id) ON DELETE CASCADE,
  workout_id INTEGER REFERENCES workout(id) ON DELETE CASCADE,
)

CREATE TABLE exercise (
  id SERIAL PRIMARY KEY NOT NULL,
  muscle_group_id INTEGER REFERENCES muscle_group(id) ON DELETE CASCADE,
  exercise_picture_url VARCHAR(255) NOT NULL,
  exercise_name VARCHAR(255) NOT NULL,
  exercise_info VARCHAR(900) NOT NULL,
  exercise_video_url VARCHAR(255) NOT NULL,
  total_time INTEGER NOT NULL,
  num_of_reps INTEGER NOT NULL,
  num_of_sets INTEGER NOT NULL,
  intensity INTEGER NOT NULL,
  rating INTEGER
);

CREATE TABLE workout (
  id SERIAL PRIMARY KEY NOT NULL,
  name VARCHAR(255) NOT NULL,
  workout_time TIME NOT NULL
);

CREATE TABLE user_workout (
  id SERIAL PRIMARY KEY NOT NULL,
  user_id INTEGER REFERENCES user(id) ON DELETE CASCADE,
  workout_id INTEGER REFERENCES workout(id) ON DELETE CASCADE,
  workout_completed BOOLEAN NOT NULL DEFAULT FALSE,
  workout_saved BOOLEAN NOT NULL DEFAULT FALSE
);

CREATE TABLE muscle_group (
  id SERIAL PRIMARY KEY NOT NULL,
  user_id INTEGER REFERENCES user(id) ON DELETE CASCADE,
  workout_id INTEGER REFERENCES workout(id) ON DELETE CASCADE,
  legs BOOLEAN NOT NULL DEFAULT FALSE,
  chest BOOLEAN NOT NULL DEFAULT FALSE,
  arms BOOLEAN NOT NULL DEFAULT FALSE,
  core BOOLEAN NOT NULL DEFAULT FALSE,
  cardio BOOLEAN NOT NULL DEFAULT FALSE,
  shoulders BOOLEAN NOT NULL DEFAULT FALSE,
  back BOOLEAN NOT NULL DEFAULT FALSE
);


CREATE TABLE user_rating/comment (
  id SERIAL PRIMARY KEY NOT NULL,
  user_id INTEGER REFERENCES user(id) ON DELETE CASCADE,
  workout_id INTEGER REFERENCES workout(id) ON DELETE CASCADE,
  workout_rating INTEGER NOT NULL DEFAULT 0,
  likes BOOLEAN,
  workout_score INTEGER NOT NULL DEFAULT 0,
  comments VARCHAR(500) NOT NULL
);

CREATE TABLE messaging (
  id SERIAL PRIMARY KEY NOT NULL,
  sender_user_id INTEGER REFERENCES user(id) ON DELETE CASCADE,
  receiver_user_id INTEGER REFERENCES user(id) ON DELETE CASCADE,
  message VARCHAR(1000)
);